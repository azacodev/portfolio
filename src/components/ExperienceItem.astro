---
interface Props {
  title: string;
  subtitle: string;
  description: string;
  date: string;
  link?: string;
}

const { title, subtitle, description, date, link } = Astro.props;
---

<div class="relative">
  <span
    class="absolute flex items-center justify-center size-2 rounded-full -start-[29px] top-2 ring-8 ring-white bg-black"
  >
  </span>
  <h3 class="flex items-center mb-1 text-lg font-semibold text-black">
    {title}
  </h3>

  <h5 class="text-sm">{subtitle}</h5>
  <time class="block mb-2 text-sm font-normal leading-none text-black"
    >{date}</time
  >

  <p class="mb-4 text-base font-normal text-black">
    {description}
  </p>
  {
    link && (
      <a
        href={link}
        class="inline-flex items-center px-4 py-2 text-sm font-medium text-gray-900 bg-white border border-gray-200 rounded-lg hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-4 focus:outline-none focus:ring-gray-100 focus:text-blue-700 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:text-white dark:hover:bg-gray-700 dark:focus:ring-gray-700"
      >
        Learn more{" "}
        <svg
          class="w-3 h-3 ms-2 rtl:rotate-180"
          aria-hidden="true"
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 14 10"
        >
          <path
            stroke="currentColor"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M1 5h12m0 0L9 1m4 4L9 9"
          />
        </svg>
      </a>
    )
  }
</div>
